"""Another StatusHistory fix

Revision ID: a2ad49397073
Revises: 07c0e90d6f94
Create Date: 2021-04-17 22:35:28.843898

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '07c0e90d6f94'
down_revision = 'a5afa0253cdd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('status_history_sheriff_sale_id_fkey', 'status_history', type_='foreignkey')
    op.drop_column('status_history', 'sheriff_sale_id')
    op.drop_table('nj_parcels')

    op.add_column('listing', sa.Column('state', sa.String(), nullable=True))
    op.add_column('status_history', sa.Column('listing_id', sa.Integer(), nullable=True))
    op.create_foreign_key('status_history_listing_id_fkey', 'status_history', 'listing', ['listing_id'], ['id'])

    op.drop_table('sheriff_sale')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('status_history', sa.Column('sheriff_sale_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'status_history', type_='foreignkey')
    op.create_foreign_key(
        'status_history_sheriff_sale_id_fkey', 'status_history', 'sheriff_sale', ['sheriff_sale_id'], ['id']
    )
    op.drop_column('status_history', 'listing_id')
    op.create_table(
        'nj_parcels',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('sheriff_sale_id', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('block', sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('county', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('lot', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['sheriff_sale_id'], ['sheriff_sale.id'], name='nj_parcels_sheriff_sale_id_fkey'),
        sa.PrimaryKeyConstraint('id', name='nj_parcels_pkey'),
    )
    op.create_table(
        'sheriff_sale',
        sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('sheriff_id', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('attorney', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('attorney_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('county', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('court_case', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('deed', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('deed_address', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('defendant', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('judgment', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
        sa.Column('maps_url', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('parcel', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('plaintiff', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('priors', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('sale_date', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('secondary_unit', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('unit', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('unit_secondary', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column('upset_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
        sa.Column('zip_code', sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            'created_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True
        ),
        sa.Column(
            'updated_on', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint('id', name='sheriff_sale_pkey'),
        sa.UniqueConstraint('address', name='sheriff_sale_address_key'),
    )
    # ### end Alembic commands ###
